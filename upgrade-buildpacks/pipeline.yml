# Copyright 2017-Present Pivotal Software, Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

cf_api_params: &cf_api_params
  CF_API_URI: {{cf_api_uri}}
  CF_USERNAME: {{cf_user}}
  CF_PASSWORD: {{cf_password}}

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:
- name: pcf-pipelines
  type: git
  source:
    uri: git@github.com:pivotal-cf/pcf-pipelines.git
    branch: master
    private_key: {{git_private_key}}

- name: binary-buildpack
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: binary-buildpack
    product_version: \d+\.\d+\.\d+

- name: dotnet-core-buildpack
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: dotnet-core-buildpack
    product_version: \d+\.\d+\.\d+

- name: go-buildpack
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: go-buildpack
    product_version: \d+\.\d+\.\d+

- name: java-buildpack
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: java-buildpack
    product_version: \d+\.\d+(\.\d+)?

- name: nodejs-buildpack
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: nodejs-buildpack
    product_version: \d+\.\d+\.\d+

- name: php-buildpack
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: php-buildpack
    product_version: \d+\.\d+\.\d+

- name: python-buildpack
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: python-buildpack
    product_version: \d+\.\d+\.\d+

- name: ruby-buildpack
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: ruby-buildpack
    product_version: \d+\.\d+\.\d+

- name: staticfile-buildpack
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: staticfile-buildpack
    product_version: \d+\.\d+\.\d+

- name: tc-buildpack
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: tc-server-buildpack
    product_version: \d+\.\d+(\.\d+)?

- name: schedule
  type: time
  source:
    interval: 30m
    start: "12:00 AM"
    stop: "11:59 PM"
    location: America/Los_Angeles
    days: [Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday]

jobs:
- name: regulator
  plan:
  - aggregate:
    - get: schedule
      trigger: true
    - get: binary-buildpack
      params: { globs: [] }
    - get: dotnet-core-buildpack
      params: { globs: [] }
    - get: go-buildpack
      params: { globs: [] }
    - get: java-buildpack
      params: { globs: [] }
    - get: nodejs-buildpack
      params: { globs: [] }
    - get: php-buildpack
      params: { globs: [] }
    - get: python-buildpack
      params: { globs: [] }
    - get: ruby-buildpack
      params: { globs: [] }
    - get: staticfile-buildpack
      params: { globs: [] }
    - get: tc-buildpack
      params: { globs: [] }

- name: stage-binary-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: buildpack
      resource: binary-buildpack
      trigger: true
      passed: [regulator]

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: binary_buildpack_latest
      STACKS: "cflinuxfs2 cflinuxfs3 windows2012R2 windows2016"

- name: promote-binary-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: binary-buildpack
      trigger: true
      passed: [stage-binary-buildpack]
      params: {globs: []}
    - get: pcf-pipelines
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: binary_buildpack_latest
      TARGET_BUILDPACK_NAME: binary_buildpack
      STACKS: "cflinuxfs2 cflinuxfs3 windows2012R2 windows2016"

- name: stage-dotnet-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: buildpack
      resource: dotnet-core-buildpack
      passed: [regulator]
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: dotnet_core_buildpack_offline_latest
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: promote-dotnet-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: dotnet-core-buildpack
      trigger: true
      passed: [stage-dotnet-buildpack]
      params: {globs: []}
    - get: pcf-pipelines
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: dotnet_core_buildpack_offline_latest
      TARGET_BUILDPACK_NAME: dotnet_core_buildpack_offline
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: stage-go-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: buildpack
      resource: go-buildpack
      passed: [regulator]
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: go_buildpack_latest
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: promote-go-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: go-buildpack
      passed: [stage-go-buildpack]
      trigger: true
      params: {globs: []}
    - get: pcf-pipelines
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: go_buildpack_latest
      TARGET_BUILDPACK_NAME: go_buildpack
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: upgrade-java-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: buildpack
      resource: java-buildpack
      passed: [regulator]
      trigger: true
      params:
        globs:
        - "*offline*"

  - task: upgrade
    file: pcf-pipelines/tasks/upgrade-buildpack/task.yml
    params:
      <<: *cf_api_params
      TARGET_BUILDPACK_NAME: java_buildpack_offline
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: stage-nodejs-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: buildpack
      passed: [regulator]
      resource: nodejs-buildpack
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: nodejs_buildpack_latest
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: promote-nodejs-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: nodejs-buildpack
      passed: [stage-nodejs-buildpack]
      trigger: true
      params: {globs: []}
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: nodejs_buildpack_latest
      TARGET_BUILDPACK_NAME: nodejs_buildpack
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: stage-php-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: buildpack
      passed: [regulator]
      resource: php-buildpack
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: php_buildpack_latest
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: promote-php-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: php-buildpack
      passed: [stage-php-buildpack]
      trigger: true
      params: {globs: []}
    - get: pcf-pipelines
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: php_buildpack_latest
      TARGET_BUILDPACK_NAME: php_buildpack
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: stage-python-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: buildpack
      passed: [regulator]
      resource: python-buildpack
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: python_buildpack_latest
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: promote-python-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: python-buildpack
      passed: [stage-python-buildpack]
      trigger: true
      params: {globs: []}
    - get: pcf-pipelines
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: python_buildpack_latest
      TARGET_BUILDPACK_NAME: python_buildpack
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: stage-ruby-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: buildpack
      passed: [regulator]
      resource: ruby-buildpack
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: ruby_buildpack_latest
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: promote-ruby-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: ruby-buildpack
      passed: [stage-ruby-buildpack]
      trigger: true
      params: {globs: []}
    - get: pcf-pipelines
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: ruby_buildpack_latest
      TARGET_BUILDPACK_NAME: ruby_buildpack
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: stage-staticfile-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: buildpack
      passed: [regulator]
      resource: staticfile-buildpack
      trigger: true

  - task: stage
    file: pcf-pipelines/tasks/stage-buildpack/task.yml
    params:
      <<: *cf_api_params
      BUILDPACK_NAME: staticfile_buildpack_latest
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: promote-staticfile-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: staticfile-buildpack
      passed: [stage-staticfile-buildpack]
      trigger: true
      params: {globs: []}
    - get: pcf-pipelines
  - task: promote
    file: pcf-pipelines/tasks/promote-buildpack/task.yml
    params:
      <<: *cf_api_params
      SOURCE_BUILDPACK_NAME: staticfile_buildpack_latest
      TARGET_BUILDPACK_NAME: staticfile_buildpack
      STACKS: "cflinuxfs2 cflinuxfs3"

- name: upgrade-tcserver-buildpack
  serial_groups: [cc-api]
  plan:
  - aggregate:
    - get: pcf-pipelines
    - get: buildpack
      resource: tc-buildpack
      passed: [regulator]
      trigger: true
      params:
        globs:
        - "*offline*"

  - task: upgrade
    file: pcf-pipelines/tasks/upgrade-buildpack/task.yml
    params:
      <<: *cf_api_params
      TARGET_BUILDPACK_NAME: tc_buildpack
      STACKS: "cflinuxfs2 cflinuxfs3"
